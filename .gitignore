# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# Production builds
dist/
build/
.next/
out/

# Environment files
.env
.env.*
.env.local
.env.development.local
.env.test.local
.env.production.local
env.production
env.development
env.test

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Dependency directories
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
.next/cache/

# Nuxt.js build / generate output
.nuxt
dist

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Editor directories and files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Database files
*.db
*.sqlite
*.sqlite3

# Upload directories
uploads/
backend/uploads/
frontend/uploads/

# TypeScript cache
*.tsbuildinfo
tsconfig.tsbuildinfo

# Local development
.env.local
.env.development.local
.env.test.local
.env.production.local

# Deployment files (keep templates, ignore actual configs)
# Keep these files in git as they are templates:
# - render.yaml (template)
# - vercel.json (template)
# - Procfile (template)
# - deploy.sh (script)

# But ignore actual deployment configs if they contain secrets
# .env.production
# .env.staging

# IDE and editor files
.vscode/settings.json
.vscode/launch.json
.vscode/extensions.json
.idea/
*.swp
*.swo
*~

# Testing
coverage/
.nyc_output/
junit.xml

# Misc
*.tgz
*.tar.gz
.cache/
.parcel-cache/

# Optional: Uncomment if you want to ignore these
# .env.production
# .env.staging
